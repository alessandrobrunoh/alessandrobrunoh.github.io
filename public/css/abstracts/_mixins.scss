/* abstracts/_mixins.scss */

/* Responsive media query mixin */
@mixin respond($breakpoint) {
    @if $breakpoint == xs {
        @media (min-width: var(--breakpoint-xs)) {
            @content;
        }
    } @else if $breakpoint == sm {
        @media (min-width: var(--breakpoint-sm)) {
            @content;
        }
    } @else if $breakpoint == md {
        @media (min-width: var(--breakpoint-md)) {
            @content;
        }
    } @else if $breakpoint == lg {
        @media (min-width: var(--breakpoint-lg)) {
            @content;
        }
    } @else if $breakpoint == xl {
        @media (min-width: var(--breakpoint-xl)) {
            @content;
        }
    } @else if $breakpoint == xxl {
        @media (min-width: var(--breakpoint-xxl)) {
            @content;
        }
    }
}

/* Font utility mixin */
@mixin font($size, $weight: 400, $lh: 1.2) {
    font-size: var(--font-#{$size});
    font-weight: $weight;
    line-height: $lh;
}

/* Flex center utility */
@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Button utility mixin */
@mixin button($color: var(--primary), $radius: 0.5em, $padding: 0.75em 1.5em) {
    display: inline-block;
    background: $color;
    color: var(--white);
    border: none;
    border-radius: $radius;
    padding: $padding;
    cursor: pointer;
    font-family: inherit;
    transition:
        background 0.2s,
        color 0.2s;
    &:hover,
    &:focus {
        background: var(--secondary);
        color: var(--white);
    }
}

/* Card utility mixin */
@mixin card($radius: 1em, $shadow: 0 4px 24px rgba(0, 0, 0, 0.08)) {
    background: var(--white);
    border-radius: $radius;
    box-shadow: $shadow;
    padding: 2em;
    transition: box-shadow 0.2s;
    &:hover {
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
    }
}

/* Icon utility mixin */
@mixin icon($size: 1.5em, $color: var(--content)) {
    width: $size;
    height: $size;
    fill: $color;
    display: inline-block;
    vertical-align: middle;
}

/* Grid responsive utility */
@mixin grid($columns: 12, $gap: 1rem) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

/* Hide visually but keep accessible */
@mixin sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}

@mixin glass {
    background: rgba(255, 255, 255, 0.08);
    border-radius: 50px;
    border: 1px solid rgba(255, 255, 255, 0.25);
    box-shadow:
        inset 0 1px 0 rgba(255, 255, 255, 0.15),
        0 2px 10px rgba(0, 0, 0, 0.05);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    color: white;
    transition: all 0.3s ease;
}
